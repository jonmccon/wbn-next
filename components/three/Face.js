/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react"
import { useGLTF, useTexture } from "@react-three/drei"

export default function Face({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF("/models/Face5.glb")
  const faceTexture = useTexture("/models/texture-baked.png")
  const faceNormal = useTexture("/models/normal-baked.png")
  const faceRoughness = useTexture("/models/roughness-baked.png")
  const faceAO = useTexture("/models/ao-baked.png")
  

  
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.FaceShader.geometry} 
        material={materials.Selfie_fullres}
      >         
      <meshPhysicalMaterial 
        map={faceTexture}
        normalMap={faceNormal}
        roughnessMap={faceRoughness}
        aoMap={faceAO}
        
      />
      </mesh>
    </group>
  )
}



useGLTF.preload("/models/Face5.glb")

// console.log(Face)



// export default function Model(props) {
//   const { nodes } = useGLTF('models/FEshape.glb')
//   return (
//       <mesh material={nodes.pTorus1.material} geometry={nodes.pTorus1.geometry}> 
//            <meshStandardMaterial
//               attach="material"
//               color="white"
//               roughness={0.3}
//               metalness={1.0}
//          />
//       </mesh>
//   )
// }

// npx gltfjsx faceShaderFullres.glb